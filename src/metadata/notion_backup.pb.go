// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: notion_backup.proto

package metadata

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotionObjectType int32

const (
	NotionObjectType_UNKNOWN  NotionObjectType = 0
	NotionObjectType_ROOT     NotionObjectType = 1
	NotionObjectType_PAGE     NotionObjectType = 2
	NotionObjectType_DATABASE NotionObjectType = 3
	NotionObjectType_BLOCK    NotionObjectType = 4
)

// Enum value maps for NotionObjectType.
var (
	NotionObjectType_name = map[int32]string{
		0: "UNKNOWN",
		1: "ROOT",
		2: "PAGE",
		3: "DATABASE",
		4: "BLOCK",
	}
	NotionObjectType_value = map[string]int32{
		"UNKNOWN":  0,
		"ROOT":     1,
		"PAGE":     2,
		"DATABASE": 3,
		"BLOCK":    4,
	}
)

func (x NotionObjectType) Enum() *NotionObjectType {
	p := new(NotionObjectType)
	*p = x
	return p
}

func (x NotionObjectType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotionObjectType) Descriptor() protoreflect.EnumDescriptor {
	return file_notion_backup_proto_enumTypes[0].Descriptor()
}

func (NotionObjectType) Type() protoreflect.EnumType {
	return &file_notion_backup_proto_enumTypes[0]
}

func (x NotionObjectType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotionObjectType.Descriptor instead.
func (NotionObjectType) EnumDescriptor() ([]byte, []int) {
	return file_notion_backup_proto_rawDescGZIP(), []int{0}
}

type NotionObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the object in notionbackup module
	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	// Storage identifier of the object with which object can be retrived from
	// database or any storage system where notion objects are stored
	StorageIdentifier string `protobuf:"bytes,2,opt,name=storage_identifier,json=storageIdentifier,proto3" json:"storage_identifier,omitempty"`
	// Notion object type
	Type NotionObjectType `protobuf:"varint,3,opt,name=type,proto3,enum=NotionObjectType" json:"type,omitempty"`
	// ID of the notion object. This ID belongs to ID created by Notion App
	NotionObjectId string `protobuf:"bytes,4,opt,name=notion_object_id,json=notionObjectId,proto3" json:"notion_object_id,omitempty"`
}

func (x *NotionObject) Reset() {
	*x = NotionObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_backup_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotionObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotionObject) ProtoMessage() {}

func (x *NotionObject) ProtoReflect() protoreflect.Message {
	mi := &file_notion_backup_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotionObject.ProtoReflect.Descriptor instead.
func (*NotionObject) Descriptor() ([]byte, []int) {
	return file_notion_backup_proto_rawDescGZIP(), []int{0}
}

func (x *NotionObject) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *NotionObject) GetStorageIdentifier() string {
	if x != nil {
		return x.StorageIdentifier
	}
	return ""
}

func (x *NotionObject) GetType() NotionObjectType {
	if x != nil {
		return x.Type
	}
	return NotionObjectType_UNKNOWN
}

func (x *NotionObject) GetNotionObjectId() string {
	if x != nil {
		return x.NotionObjectId
	}
	return ""
}

// List of UUIDs of different NotionObject
type ChildrenNotionObjectUuids struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChildrenUuidList []string `protobuf:"bytes,1,rep,name=children_uuid_list,json=childrenUuidList,proto3" json:"children_uuid_list,omitempty"`
}

func (x *ChildrenNotionObjectUuids) Reset() {
	*x = ChildrenNotionObjectUuids{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_backup_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChildrenNotionObjectUuids) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChildrenNotionObjectUuids) ProtoMessage() {}

func (x *ChildrenNotionObjectUuids) ProtoReflect() protoreflect.Message {
	mi := &file_notion_backup_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChildrenNotionObjectUuids.ProtoReflect.Descriptor instead.
func (*ChildrenNotionObjectUuids) Descriptor() ([]byte, []int) {
	return file_notion_backup_proto_rawDescGZIP(), []int{1}
}

func (x *ChildrenNotionObjectUuids) GetChildrenUuidList() []string {
	if x != nil {
		return x.ChildrenUuidList
	}
	return nil
}

// Structure to store storage configuration for any one type of configuration
type StorageConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Config:
	//	*StorageConfig_Local_
	Config isStorageConfig_Config `protobuf_oneof:"config"`
}

func (x *StorageConfig) Reset() {
	*x = StorageConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_backup_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig) ProtoMessage() {}

func (x *StorageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_notion_backup_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig.ProtoReflect.Descriptor instead.
func (*StorageConfig) Descriptor() ([]byte, []int) {
	return file_notion_backup_proto_rawDescGZIP(), []int{2}
}

func (m *StorageConfig) GetConfig() isStorageConfig_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (x *StorageConfig) GetLocal() *StorageConfig_Local {
	if x, ok := x.GetConfig().(*StorageConfig_Local_); ok {
		return x.Local
	}
	return nil
}

type isStorageConfig_Config interface {
	isStorageConfig_Config()
}

type StorageConfig_Local_ struct {
	Local *StorageConfig_Local `protobuf:"bytes,1,opt,name=local,proto3,oneof"`
}

func (*StorageConfig_Local_) isStorageConfig_Config() {}

type MetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map for storing NotionObject with uuid as a key and NotionObject as a value
	NotionObjectMap map[string]*NotionObject `protobuf:"bytes,1,rep,name=notion_object_map,json=notionObjectMap,proto3" json:"notion_object_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map stores the mapping of each node UUID to different node UUIDs
	ParentUuid_2ChildrenUuidMap map[string]*ChildrenNotionObjectUuids `protobuf:"bytes,2,rep,name=parent_uuid_2_children_uuid_map,json=parentUuid2ChildrenUuidMap,proto3" json:"parent_uuid_2_children_uuid_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Storage configuration in which notion data is stored
	StorageConfig *StorageConfig `protobuf:"bytes,3,opt,name=storage_config,json=storageConfig,proto3" json:"storage_config,omitempty"`
}

func (x *MetaData) Reset() {
	*x = MetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_backup_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaData) ProtoMessage() {}

func (x *MetaData) ProtoReflect() protoreflect.Message {
	mi := &file_notion_backup_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaData.ProtoReflect.Descriptor instead.
func (*MetaData) Descriptor() ([]byte, []int) {
	return file_notion_backup_proto_rawDescGZIP(), []int{3}
}

func (x *MetaData) GetNotionObjectMap() map[string]*NotionObject {
	if x != nil {
		return x.NotionObjectMap
	}
	return nil
}

func (x *MetaData) GetParentUuid_2ChildrenUuidMap() map[string]*ChildrenNotionObjectUuids {
	if x != nil {
		return x.ParentUuid_2ChildrenUuidMap
	}
	return nil
}

func (x *MetaData) GetStorageConfig() *StorageConfig {
	if x != nil {
		return x.StorageConfig
	}
	return nil
}

// Config of data stored in local directory
type StorageConfig_Local struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Directory in which all pages are stored
	PageDir string `protobuf:"bytes,1,opt,name=page_dir,json=pageDir,proto3" json:"page_dir,omitempty"`
	// Directory in which all databases are stored
	DatabaseDir string `protobuf:"bytes,2,opt,name=database_dir,json=databaseDir,proto3" json:"database_dir,omitempty"`
	// Directory in which all blocks are stored
	BlocksDir string `protobuf:"bytes,3,opt,name=blocks_dir,json=blocksDir,proto3" json:"blocks_dir,omitempty"`
}

func (x *StorageConfig_Local) Reset() {
	*x = StorageConfig_Local{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notion_backup_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorageConfig_Local) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorageConfig_Local) ProtoMessage() {}

func (x *StorageConfig_Local) ProtoReflect() protoreflect.Message {
	mi := &file_notion_backup_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorageConfig_Local.ProtoReflect.Descriptor instead.
func (*StorageConfig_Local) Descriptor() ([]byte, []int) {
	return file_notion_backup_proto_rawDescGZIP(), []int{2, 0}
}

func (x *StorageConfig_Local) GetPageDir() string {
	if x != nil {
		return x.PageDir
	}
	return ""
}

func (x *StorageConfig_Local) GetDatabaseDir() string {
	if x != nil {
		return x.DatabaseDir
	}
	return ""
}

func (x *StorageConfig_Local) GetBlocksDir() string {
	if x != nil {
		return x.BlocksDir
	}
	return ""
}

var File_notion_backup_proto protoreflect.FileDescriptor

var file_notion_backup_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x19, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x68, 0x69, 0x6c, 0x64,
	0x72, 0x65, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x55, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x05,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x1a, 0x64, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x44, 0x69, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x44, 0x69, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x44, 0x69, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xbb, 0x03, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x4a, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x6e,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x12, 0x6e,
	0x0a, 0x1f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x32, 0x5f,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x32, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x1a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x32, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x12, 0x35,
	0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x51, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x69, 0x0a, 0x1f, 0x50, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x55, 0x75, 0x69, 0x64, 0x32, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x55,
	0x75, 0x69, 0x64, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x55, 0x75, 0x69, 0x64, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x2a, 0x4c, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4f, 0x54, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x50, 0x41, 0x47, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x41, 0x54, 0x41,
	0x42, 0x41, 0x53, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x10,
	0x04, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notion_backup_proto_rawDescOnce sync.Once
	file_notion_backup_proto_rawDescData = file_notion_backup_proto_rawDesc
)

func file_notion_backup_proto_rawDescGZIP() []byte {
	file_notion_backup_proto_rawDescOnce.Do(func() {
		file_notion_backup_proto_rawDescData = protoimpl.X.CompressGZIP(file_notion_backup_proto_rawDescData)
	})
	return file_notion_backup_proto_rawDescData
}

var file_notion_backup_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_notion_backup_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_notion_backup_proto_goTypes = []interface{}{
	(NotionObjectType)(0),             // 0: NotionObjectType
	(*NotionObject)(nil),              // 1: NotionObject
	(*ChildrenNotionObjectUuids)(nil), // 2: ChildrenNotionObjectUuids
	(*StorageConfig)(nil),             // 3: StorageConfig
	(*MetaData)(nil),                  // 4: MetaData
	(*StorageConfig_Local)(nil),       // 5: StorageConfig.Local
	nil,                               // 6: MetaData.NotionObjectMapEntry
	nil,                               // 7: MetaData.ParentUuid2ChildrenUuidMapEntry
}
var file_notion_backup_proto_depIdxs = []int32{
	0, // 0: NotionObject.type:type_name -> NotionObjectType
	5, // 1: StorageConfig.local:type_name -> StorageConfig.Local
	6, // 2: MetaData.notion_object_map:type_name -> MetaData.NotionObjectMapEntry
	7, // 3: MetaData.parent_uuid_2_children_uuid_map:type_name -> MetaData.ParentUuid2ChildrenUuidMapEntry
	3, // 4: MetaData.storage_config:type_name -> StorageConfig
	1, // 5: MetaData.NotionObjectMapEntry.value:type_name -> NotionObject
	2, // 6: MetaData.ParentUuid2ChildrenUuidMapEntry.value:type_name -> ChildrenNotionObjectUuids
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_notion_backup_proto_init() }
func file_notion_backup_proto_init() {
	if File_notion_backup_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notion_backup_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotionObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_backup_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChildrenNotionObjectUuids); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_backup_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_backup_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notion_backup_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorageConfig_Local); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_notion_backup_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*StorageConfig_Local_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notion_backup_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_notion_backup_proto_goTypes,
		DependencyIndexes: file_notion_backup_proto_depIdxs,
		EnumInfos:         file_notion_backup_proto_enumTypes,
		MessageInfos:      file_notion_backup_proto_msgTypes,
	}.Build()
	File_notion_backup_proto = out.File
	file_notion_backup_proto_rawDesc = nil
	file_notion_backup_proto_goTypes = nil
	file_notion_backup_proto_depIdxs = nil
}
